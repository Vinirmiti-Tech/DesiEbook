apply plugin: 'com.android.application'

import com.android.build.OutputFile

android {
    compileSdkVersion 25
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.github.axet.bookreader"
        minSdkVersion 9
        targetSdkVersion 26
        versionCode 345
        versionName "1.11.17"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    signingConfigs {
        release {
            storeFile file(prop('RELEASE_STORE_FILE') ?: 'none')
            storePassword prop('RELEASE_STORE_PASSWORD')
            keyAlias prop('RELEASE_KEY_ALIAS')
            keyPassword prop('RELEASE_KEY_PASSWORD')
        }
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def abi = output.getFilter(OutputFile.ABI)
            if (abi == null)
                abi = "universal";
            output.outputFileName = org.apache.commons.io.FilenameUtils.getExtension(android.defaultConfig.applicationId) + "-" + abi + "-" + android.defaultConfig.versionName + "-" + variant.buildType.name + ".apk"
        }
    }
    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
}

// if you are having 'LinearAlloc exceeded capacity' issue on old devices
//
// https://stackoverflow.com/questions/8413898
//
configurations {
    assets
}

clean.doFirst {
    if (!project.configurations.assets.empty) {
        delete fileTree('src/main/assets') {
            include '**/*.dex'
        }
    }
}

task processDexs() {
    doLast {
        configurations.assets.each { File file ->
            exec {
                commandLine "${android.getSdkDirectory().getAbsolutePath()}/build-tools/${android.buildToolsVersion}/dx",
                        '--dex',
                        "--output=${project.projectDir}/src/main/assets/${file.name.take(file.name.lastIndexOf('.'))}.dex",
                        "${file.getAbsolutePath()}"
            }
        }
    }
}

project.afterEvaluate {
    preBuild.dependsOn processDexs
}

dependencies {
    testImplementation 'junit:junit:4.12'
    implementation 'com.github.axet:android-library:1.28.37' // implementation project(':android-library')
    implementation 'com.android.support:design:25.3.1'
    implementation 'com.android.support:support-vector-drawable:25.3.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.github.axet.fbreader:library:0.1.11'
    implementation 'com.github.axet:djvulibre:0.1.0'
    implementation 'com.github.axet:pdfium:2.0.7'
    implementation 'com.github.axet:k2pdfopt:0.1.3'
    implementation('com.github.axet:java-unrar:1.7.0-8') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    implementation('com.github.axet:zip4j:1.3.2-2')
    implementation('com.github.axet:wget:1.4.2') {
        exclude group: 'com.thoughtworks.xstream', module: 'xstream'
    }
    assets('com.madgag.spongycastle:bctls-jdk15on:1.58.0.0') { exclude module: 'junit' } // api 'com.madgag.spongycastle:bctls-jdk15on:1.58.0.0'
}
